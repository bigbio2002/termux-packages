diff -Naur gcc-5.5.0/gcc/bitmap.c gcc-5.5.0_good/gcc/bitmap.c
--- gcc-5.5.0/gcc/bitmap.c	2015-01-05 07:33:28.000000000 -0500
+++ gcc-5.5.0_good/gcc/bitmap.c	2024-05-04 23:11:16.677195690 -0400
@@ -2170,8 +2170,8 @@
       sprintf (s, "%s:%i (%s)", s1, d->line, d->function);
       s[41] = 0;
       fprintf (stderr,
-	       "%-41s %9u %15"PRId64" %15"PRId64" %15"PRId64
-	       " %10"PRId64" %10"PRId64"\n",
+	       "%-41s %9u %15" PRId64 " %15" PRId64 " %15" PRId64
+	       " %10" PRId64 " %10" PRId64 "\n",
 	       s, d->created,
 	       d->allocated, d->peak, d->current,
 	       d->nsearches, d->search_iter);
@@ -2204,7 +2204,7 @@
   bitmap_desc_hash->traverse <bitmap_output_info *, print_statistics> (&info);
   fprintf (stderr, "---------------------------------------------------------------------------------\n");
   fprintf (stderr,
-	   "%-41s %9"PRId64" %15"PRId64"\n",
+	   "%-41s %9" PRId64 " %15" PRId64 "\n",
 	   "Total", info.count, info.size);
   fprintf (stderr, "---------------------------------------------------------------------------------\n");
 }
diff -Naur gcc-5.5.0/gcc/c/c-aux-info.c gcc-5.5.0_good/gcc/c/c-aux-info.c
--- gcc-5.5.0/gcc/c/c-aux-info.c	2015-01-09 15:18:42.000000000 -0500
+++ gcc-5.5.0_good/gcc/c/c-aux-info.c	2024-05-04 19:17:44.326917882 -0400
@@ -319,7 +319,7 @@
 	  else
 	    {
 	      char buff[23];
-	      sprintf (buff, "["HOST_WIDE_INT_PRINT_DEC"]",
+	      sprintf (buff, "[" HOST_WIDE_INT_PRINT_DEC "]",
 		       int_size_in_bytes (t)
 		       / int_size_in_bytes (TREE_TYPE (t)));
 	      ret_val = gen_type (concat (ret_val, buff, NULL),
diff -Naur gcc-5.5.0/gcc/cfg.c gcc-5.5.0_good/gcc/cfg.c
--- gcc-5.5.0/gcc/cfg.c	2015-01-09 15:18:42.000000000 -0500
+++ gcc-5.5.0_good/gcc/cfg.c	2024-05-04 23:12:58.863872537 -0400
@@ -508,7 +508,7 @@
   if (e->count && do_details)
     {
       fputs (" count:", file);
-      fprintf (file, "%"PRId64, e->count);
+      fprintf (file, "%" PRId64, e->count);
     }
 
   if (e->flags && do_details)
@@ -756,7 +756,7 @@
       if (flags & TDF_DETAILS)
 	{
 	  struct function *fun = DECL_STRUCT_FUNCTION (current_function_decl);
-	  fprintf (outf, ", count " "%"PRId64,
+	  fprintf (outf, ", count " "%" PRId64,
 		   (int64_t) bb->count);
 	  fprintf (outf, ", freq %i", bb->frequency);
 	  if (maybe_hot_bb_p (fun, bb))
diff -Naur gcc-5.5.0/gcc/cfghooks.c gcc-5.5.0_good/gcc/cfghooks.c
--- gcc-5.5.0/gcc/cfghooks.c	2016-02-28 01:43:07.000000000 -0500
+++ gcc-5.5.0_good/gcc/cfghooks.c	2024-05-04 23:13:40.167209984 -0400
@@ -330,7 +330,7 @@
     internal_error ("%s does not support dump_bb_for_graph",
 		    cfg_hooks->name);
   if (bb->count)
-    pp_printf (pp, "COUNT:" "%"PRId64, bb->count);
+    pp_printf (pp, "COUNT:" "%" PRId64, bb->count);
   pp_printf (pp, " FREQ:%i |", bb->frequency);
   pp_write_text_to_stream (pp);
   if (!(dump_flags & TDF_SLIM))
diff -Naur gcc-5.5.0/gcc/cgraph.c gcc-5.5.0_good/gcc/cgraph.c
--- gcc-5.5.0/gcc/cgraph.c	2017-05-30 03:26:00.000000000 -0400
+++ gcc-5.5.0_good/gcc/cgraph.c	2024-05-04 23:16:06.217224534 -0400
@@ -1326,7 +1326,7 @@
 	  if (dump_file)
 	    fprintf (dump_file,
 		     "Expanding speculative call of %s/%i -> %s/%i count:"
-		     "%"PRId64"\n",
+		     "%" PRId64 "\n",
 		     xstrdup_for_dump (e->caller->name ()),
 		     e->caller->order,
 		     xstrdup_for_dump (e->callee->name ()),
@@ -1976,7 +1976,7 @@
   if (indirect_inlining_edge)
     fprintf (f, "(indirect_inlining) ");
   if (count)
-    fprintf (f, "(%"PRId64"x) ", (int64_t)count);
+    fprintf (f, "(%" PRId64 "x) ", (int64_t)count);
   if (frequency)
     fprintf (f, "(%.2f per call) ", frequency / (double)CGRAPH_FREQ_BASE);
   if (can_throw_external)
@@ -2012,7 +2012,7 @@
   fprintf (f, "  First run: %i\n", tp_first_run);
   fprintf (f, "  Function flags:");
   if (count)
-    fprintf (f, " executed %"PRId64"x",
+    fprintf (f, " executed %" PRId64 "x",
 	     (int64_t)count);
   if (origin)
     fprintf (f, " nested in: %s", origin->asm_name ());
diff -Naur gcc-5.5.0/gcc/config/aarch64/aarch64.md gcc-5.5.0_good/gcc/config/aarch64/aarch64.md
--- gcc-5.5.0/gcc/config/aarch64/aarch64.md	2016-08-26 05:37:20.000000000 -0400
+++ gcc-5.5.0_good/gcc/config/aarch64/aarch64.md	2024-05-04 23:07:41.007174205 -0400
@@ -531,7 +531,7 @@
 	char buf[64];
 	uint64_t val = ((uint64_t ) 1)
 			<< (GET_MODE_SIZE (<MODE>mode) * BITS_PER_UNIT - 1);
-	sprintf (buf, "tst\t%%<w>0, %"PRId64, val);
+	sprintf (buf, "tst\t%%<w>0, %" PRId64, val);
 	output_asm_insn (buf, operands);
 	return "<bcond>\t%l1";
       }
diff -Naur gcc-5.5.0/gcc/config/elfos.h gcc-5.5.0_good/gcc/config/elfos.h
--- gcc-5.5.0/gcc/config/elfos.h	2015-01-05 07:33:28.000000000 -0500
+++ gcc-5.5.0_good/gcc/config/elfos.h	2024-05-04 19:15:07.166902226 -0400
@@ -99,7 +99,7 @@
 
 #undef  ASM_OUTPUT_SKIP
 #define ASM_OUTPUT_SKIP(FILE, SIZE) \
-   fprintf ((FILE), "%s"HOST_WIDE_INT_PRINT_UNSIGNED"\n",\
+   fprintf ((FILE), "%s" HOST_WIDE_INT_PRINT_UNSIGNED "\n",\
 	    SKIP_ASM_OP, (SIZE))
 
 /* This is how to store into the string LABEL
@@ -167,7 +167,7 @@
     {									\
       fprintf ((FILE), "%s", COMMON_ASM_OP);				\
       assemble_name ((FILE), (NAME));					\
-      fprintf ((FILE), ","HOST_WIDE_INT_PRINT_UNSIGNED",%u\n",		\
+      fprintf ((FILE), "," HOST_WIDE_INT_PRINT_UNSIGNED ",%u\n",		\
 	       (SIZE), (ALIGN) / BITS_PER_UNIT);			\
     }									\
   while (0)
diff -Naur gcc-5.5.0/gcc/cppbuiltin.c gcc-5.5.0_good/gcc/cppbuiltin.c
--- gcc-5.5.0/gcc/cppbuiltin.c	2015-01-09 15:18:42.000000000 -0500
+++ gcc-5.5.0_good/gcc/cppbuiltin.c	2024-05-04 23:17:39.177233795 -0400
@@ -143,7 +143,7 @@
 define_builtin_macros_for_type_sizes (cpp_reader *pfile)
 {
 #define define_type_sizeof(NAME, TYPE)                             \
-    cpp_define_formatted (pfile, NAME"="HOST_WIDE_INT_PRINT_DEC,   \
+    cpp_define_formatted (pfile, NAME "=" HOST_WIDE_INT_PRINT_DEC,   \
                           tree_to_uhwi (TYPE_SIZE_UNIT (TYPE)))
 
   define_type_sizeof ("__SIZEOF_INT__", integer_type_node);
diff -Naur gcc-5.5.0/gcc/dwarf2cfi.c gcc-5.5.0_good/gcc/dwarf2cfi.c
--- gcc-5.5.0/gcc/dwarf2cfi.c	2015-01-15 08:28:42.000000000 -0500
+++ gcc-5.5.0_good/gcc/dwarf2cfi.c	2024-05-04 23:20:37.040584847 -0400
@@ -3258,7 +3258,7 @@
     case DW_CFA_offset_extended:
     case DW_CFA_offset_extended_sf:
       r = DWARF2_FRAME_REG_OUT (cfi->dw_cfi_oprnd1.dw_cfi_reg_num, 1);
-      fprintf (f, "\t.cfi_offset %lu, "HOST_WIDE_INT_PRINT_DEC"\n",
+      fprintf (f, "\t.cfi_offset %lu, " HOST_WIDE_INT_PRINT_DEC "\n",
 	       r, cfi->dw_cfi_oprnd2.dw_cfi_offset);
       break;
 
@@ -3281,7 +3281,7 @@
     case DW_CFA_def_cfa:
     case DW_CFA_def_cfa_sf:
       r = DWARF2_FRAME_REG_OUT (cfi->dw_cfi_oprnd1.dw_cfi_reg_num, 1);
-      fprintf (f, "\t.cfi_def_cfa %lu, "HOST_WIDE_INT_PRINT_DEC"\n",
+      fprintf (f, "\t.cfi_def_cfa %lu, " HOST_WIDE_INT_PRINT_DEC "\n",
 	       r, cfi->dw_cfi_oprnd2.dw_cfi_offset);
       break;
 
@@ -3299,7 +3299,7 @@
     case DW_CFA_def_cfa_offset:
     case DW_CFA_def_cfa_offset_sf:
       fprintf (f, "\t.cfi_def_cfa_offset "
-	       HOST_WIDE_INT_PRINT_DEC"\n",
+	       HOST_WIDE_INT_PRINT_DEC "\n",
 	       cfi->dw_cfi_oprnd1.dw_cfi_offset);
       break;
 
@@ -3316,13 +3316,13 @@
 	  fprintf (f, "\t.cfi_escape %#x,", DW_CFA_GNU_args_size);
 	  dw2_asm_output_data_uleb128_raw (cfi->dw_cfi_oprnd1.dw_cfi_offset);
 	  if (flag_debug_asm)
-	    fprintf (f, "\t%s args_size "HOST_WIDE_INT_PRINT_DEC,
+	    fprintf (f, "\t%s args_size " HOST_WIDE_INT_PRINT_DEC,
 		     ASM_COMMENT_START, cfi->dw_cfi_oprnd1.dw_cfi_offset);
 	  fputc ('\n', f);
 	}
       else
 	{
-	  fprintf (f, "\t.cfi_GNU_args_size "HOST_WIDE_INT_PRINT_DEC "\n",
+	  fprintf (f, "\t.cfi_GNU_args_size " HOST_WIDE_INT_PRINT_DEC "\n",
 		   cfi->dw_cfi_oprnd1.dw_cfi_offset);
 	}
       break;
diff -Naur gcc-5.5.0/gcc/dwarf2out.c gcc-5.5.0_good/gcc/dwarf2out.c
--- gcc-5.5.0/gcc/dwarf2out.c	2017-05-30 03:18:37.000000000 -0400
+++ gcc-5.5.0_good/gcc/dwarf2out.c	2024-05-04 23:21:48.360591952 -0400
@@ -5450,8 +5450,8 @@
       fprintf (outfile, HOST_WIDE_INT_PRINT_UNSIGNED, val->v.val_unsigned);
       break;
     case dw_val_class_const_double:
-      fprintf (outfile, "constant ("HOST_WIDE_INT_PRINT_DEC","\
-			HOST_WIDE_INT_PRINT_UNSIGNED")",
+      fprintf (outfile, "constant (" HOST_WIDE_INT_PRINT_DEC ","\
+			HOST_WIDE_INT_PRINT_UNSIGNED ")",
 	       val->v.val_double.high,
 	       val->v.val_double.low);
       break;
diff -Naur gcc-5.5.0/gcc/final.c gcc-5.5.0_good/gcc/final.c
--- gcc-5.5.0/gcc/final.c	2015-01-15 08:28:42.000000000 -0500
+++ gcc-5.5.0_good/gcc/final.c	2024-05-04 23:22:34.533929885 -0400
@@ -1989,7 +1989,7 @@
       if (bb->frequency)
         fprintf (file, " freq:%d", bb->frequency);
       if (bb->count)
-        fprintf (file, " count:%"PRId64,
+        fprintf (file, " count:%" PRId64,
                  bb->count);
       fprintf (file, " seq:%d", (*bb_seqn)++);
       fprintf (file, "\n%s PRED:", ASM_COMMENT_START);
diff -Naur gcc-5.5.0/gcc/ipa-cp.c gcc-5.5.0_good/gcc/ipa-cp.c
--- gcc-5.5.0/gcc/ipa-cp.c	2017-05-29 05:10:58.000000000 -0400
+++ gcc-5.5.0_good/gcc/ipa-cp.c	2024-05-05 01:45:54.825133630 -0400
@@ -2208,7 +2208,7 @@
       if (dump_file && (dump_flags & TDF_DETAILS))
 	fprintf (dump_file, "     good_cloning_opportunity_p (time: %i, "
 		 "size: %i, count_sum: " HOST_WIDE_INT_PRINT_DEC
-		 "%s%s) -> evaluation: " "%"PRId64
+		 "%s%s) -> evaluation: " "%" PRId64
 		 ", threshold: %i\n",
 		 time_benefit, size_cost, (HOST_WIDE_INT) count_sum,
 		 info->node_within_scc ? ", scc" : "",
@@ -2226,7 +2226,7 @@
       if (dump_file && (dump_flags & TDF_DETAILS))
 	fprintf (dump_file, "     good_cloning_opportunity_p (time: %i, "
 		 "size: %i, freq_sum: %i%s%s) -> evaluation: "
-		 "%"PRId64 ", threshold: %i\n",
+		 "%" PRId64 ", threshold: %i\n",
 		 time_benefit, size_cost, freq_sum,
 		 info->node_within_scc ? ", scc" : "",
 		 info->node_calling_single_call ? ", single_call" : "",
diff -Naur gcc-5.5.0/gcc/ipa-inline.c gcc-5.5.0_good/gcc/ipa-inline.c
--- gcc-5.5.0/gcc/ipa-inline.c	2015-05-17 13:43:04.000000000 -0400
+++ gcc-5.5.0_good/gcc/ipa-inline.c	2024-05-05 01:55:39.001858493 -0400
@@ -1191,8 +1191,8 @@
       if (dump)
 	{
 	  fprintf (dump_file,
-		   "      %f: guessed profile. frequency %f, count %"PRId64
-		   " caller count %"PRId64
+		   "      %f: guessed profile. frequency %f, count %" PRId64
+		   " caller count %" PRId64
 		   " time w/o inlining %f, time w inlining %f"
 		   " overall growth %i (current) %i (original)"
 		   " %i (compensated)\n",
@@ -1974,7 +1974,7 @@
 		   badness.to_double (),
 		   edge->frequency / (double)CGRAPH_FREQ_BASE);
 	  if (edge->count)
-	    fprintf (dump_file," Called %"PRId64"x\n",
+	    fprintf (dump_file," Called %" PRId64 "x\n",
 		     edge->count);
 	  if (dump_flags & TDF_DETAILS)
 	    edge_badness (edge, true);
@@ -2261,8 +2261,8 @@
 	sum_weighted += time * node->count;
       }
   fprintf (dump_file, "Overall time estimate: "
-	   "%"PRId64" weighted by profile: "
-	   "%"PRId64"\n", sum, sum_weighted);
+	   "%" PRId64 " weighted by profile: "
+	   "%" PRId64 "\n", sum, sum_weighted);
 }
 
 /* Output some useful stats about inlining.  */
@@ -2340,31 +2340,31 @@
   if (max_count)
     {
       fprintf (dump_file,
-	       "Inlined %"PRId64 " + speculative "
-	       "%"PRId64 " + speculative polymorphic "
-	       "%"PRId64 " + previously indirect "
-	       "%"PRId64 " + virtual "
-	       "%"PRId64 " + virtual and previously indirect "
-	       "%"PRId64 "\n" "Not inlined "
-	       "%"PRId64 " + previously indirect "
-	       "%"PRId64 " + virtual "
-	       "%"PRId64 " + virtual and previously indirect "
-	       "%"PRId64 " + stil indirect "
-	       "%"PRId64 " + still indirect polymorphic "
-	       "%"PRId64 "\n", inlined_cnt,
+	       "Inlined %" PRId64 " + speculative "
+	       "%" PRId64 " + speculative polymorphic "
+	       "%" PRId64 " + previously indirect "
+	       "%" PRId64 " + virtual "
+	       "%" PRId64 " + virtual and previously indirect "
+	       "%" PRId64 "\n" "Not inlined "
+	       "%" PRId64 " + previously indirect "
+	       "%" PRId64 " + virtual "
+	       "%" PRId64 " + virtual and previously indirect "
+	       "%" PRId64 " + stil indirect "
+	       "%" PRId64 " + still indirect polymorphic "
+	       "%" PRId64 "\n", inlined_cnt,
 	       inlined_speculative, inlined_speculative_ply,
 	       inlined_indir_cnt, inlined_virt_cnt, inlined_virt_indir_cnt,
 	       noninlined_cnt, noninlined_indir_cnt, noninlined_virt_cnt,
 	       noninlined_virt_indir_cnt, indirect_cnt, indirect_poly_cnt);
       fprintf (dump_file,
-	       "Removed speculations %"PRId64 "\n",
+	       "Removed speculations %" PRId64 "\n",
 	       spec_rem);
     }
   dump_overall_stats ();
   fprintf (dump_file, "\nWhy inlining failed?\n");
   for (i = 0; i < CIF_N_REASONS; i++)
     if (reason[i][2])
-      fprintf (dump_file, "%-50s: %8i calls, %8i freq, %"PRId64" count\n",
+      fprintf (dump_file, "%-50s: %8i calls, %8i freq, %" PRId64 " count\n",
 	       cgraph_inline_failed_string ((cgraph_inline_failed_t) i),
 	       (int) reason[i][2], (int) reason[i][1], reason[i][0]);
 }
diff -Naur gcc-5.5.0/gcc/ipa-polymorphic-call.c gcc-5.5.0_good/gcc/ipa-polymorphic-call.c
--- gcc-5.5.0/gcc/ipa-polymorphic-call.c	2017-01-20 03:49:08.000000000 -0500
+++ gcc-5.5.0_good/gcc/ipa-polymorphic-call.c	2024-05-05 01:44:11.588456679 -0400
@@ -661,7 +661,7 @@
 	    fprintf (f, " (or a derived type)");
 	  if (maybe_in_construction)
 	    fprintf (f, " (maybe in construction)");
-	  fprintf (f, " offset "HOST_WIDE_INT_PRINT_DEC,
+	  fprintf (f, " offset " HOST_WIDE_INT_PRINT_DEC,
 		   offset);
 	}
       if (speculative_outer_type)
@@ -672,7 +672,7 @@
 	  print_generic_expr (f, speculative_outer_type, TDF_SLIM);
 	  if (speculative_maybe_derived_type)
 	    fprintf (f, " (or a derived type)");
-	  fprintf (f, " at offset "HOST_WIDE_INT_PRINT_DEC,
+	  fprintf (f, " at offset " HOST_WIDE_INT_PRINT_DEC,
 		   speculative_offset);
 	}
     }
diff -Naur gcc-5.5.0/gcc/ipa-profile.c gcc-5.5.0_good/gcc/ipa-profile.c
--- gcc-5.5.0/gcc/ipa-profile.c	2015-02-17 16:57:53.000000000 -0500
+++ gcc-5.5.0_good/gcc/ipa-profile.c	2024-05-05 01:57:14.061867963 -0400
@@ -186,7 +186,7 @@
     {
       cumulated_time += histogram[i]->count * histogram[i]->time;
       cumulated_size += histogram[i]->size;
-      fprintf (file, "  %"PRId64": time:%i (%2.2f) size:%i (%2.2f)\n",
+      fprintf (file, "  %" PRId64 ": time:%i (%2.2f) size:%i (%2.2f)\n",
 	       (int64_t) histogram[i]->count,
 	       histogram[i]->time,
 	       cumulated_time * 100.0 / overall_time,
@@ -542,7 +542,7 @@
 	{
 	  gcov_type min, cumulated_time = 0, cumulated_size = 0;
 
-	  fprintf (dump_file, "Overall time: %"PRId64"\n",
+	  fprintf (dump_file, "Overall time: %" PRId64 "\n",
 		   (int64_t)overall_time);
 	  min = get_hot_bb_threshold ();
           for (i = 0; i < (int)histogram.length () && histogram[i]->count >= min;
@@ -551,7 +551,7 @@
 	      cumulated_time += histogram[i]->count * histogram[i]->time;
 	      cumulated_size += histogram[i]->size;
 	    }
-	  fprintf (dump_file, "GCOV min count: %"PRId64
+	  fprintf (dump_file, "GCOV min count: %" PRId64
 		   " Time:%3.2f%% Size:%3.2f%%\n", 
 		   (int64_t)min,
 		   cumulated_time * 100.0 / overall_time,
@@ -577,7 +577,7 @@
 	      cumulated_time += histogram[i]->count * histogram[i]->time;
 	      cumulated_size += histogram[i]->size;
 	    }
-	  fprintf (dump_file, "Determined min count: %"PRId64
+	  fprintf (dump_file, "Determined min count: %" PRId64
 		   " Time:%3.2f%% Size:%3.2f%%\n", 
 		   (int64_t)threshold,
 		   cumulated_time * 100.0 / overall_time,
diff -Naur gcc-5.5.0/gcc/ipa-prop.c gcc-5.5.0_good/gcc/ipa-prop.c
--- gcc-5.5.0/gcc/ipa-prop.c	2017-03-01 08:54:56.000000000 -0500
+++ gcc-5.5.0_good/gcc/ipa-prop.c	2024-05-05 01:57:42.271870773 -0400
@@ -300,7 +300,7 @@
       else if (type == IPA_JF_ANCESTOR)
 	{
 	  fprintf (f, "ANCESTOR: ");
-	  fprintf (f, "%d, offset "HOST_WIDE_INT_PRINT_DEC,
+	  fprintf (f, "%d, offset " HOST_WIDE_INT_PRINT_DEC,
 		   jump_func->value.ancestor.formal_id,
 		   jump_func->value.ancestor.offset);
 	  if (jump_func->value.ancestor.agg_preserved)
diff -Naur gcc-5.5.0/gcc/ira-color.c gcc-5.5.0_good/gcc/ira-color.c
--- gcc-5.5.0/gcc/ira-color.c	2015-09-30 12:39:44.000000000 -0400
+++ gcc-5.5.0_good/gcc/ira-color.c	2024-05-05 02:00:26.821887165 -0400
@@ -548,7 +548,7 @@
 	fprintf (f, " ");
       fprintf (f, "%d:(", node->preorder_num);
       print_hard_reg_set (f, node->hard_regs->set, false);
-      fprintf (f, ")@%"PRId64"\n", node->hard_regs->cost);
+      fprintf (f, ")@%" PRId64 "\n", node->hard_regs->cost);
       print_hard_regs_subforest (f, node->first, level + 1);
     }
 }
diff -Naur gcc-5.5.0/gcc/ira.c gcc-5.5.0_good/gcc/ira.c
--- gcc-5.5.0/gcc/ira.c	2016-03-31 09:13:13.000000000 -0400
+++ gcc-5.5.0_good/gcc/ira.c	2024-05-05 01:59:28.451881351 -0400
@@ -2508,12 +2508,12 @@
   if (internal_flag_ira_verbose > 0 && ira_dump_file != NULL)
     {
       fprintf (ira_dump_file,
-	       "+++Costs: overall %"PRId64
-	       ", reg %"PRId64
-	       ", mem %"PRId64
-	       ", ld %"PRId64
-	       ", st %"PRId64
-	       ", move %"PRId64,
+	       "+++Costs: overall %" PRId64
+	       ", reg %" PRId64
+	       ", mem %" PRId64
+	       ", ld %" PRId64
+	       ", st %" PRId64
+	       ", move %" PRId64,
 	       ira_overall_cost, ira_reg_cost, ira_mem_cost,
 	       ira_load_cost, ira_store_cost, ira_shuffle_cost);
       fprintf (ira_dump_file, "\n+++       move loops %d, new jumps %d\n",
@@ -5467,7 +5467,7 @@
 
   if (internal_flag_ira_verbose > 0 && ira_dump_file != NULL
       && overall_cost_before != ira_overall_cost)
-    fprintf (ira_dump_file, "+++Overall after reload %"PRId64 "\n",
+    fprintf (ira_dump_file, "+++Overall after reload %" PRId64 "\n",
 	     ira_overall_cost);
 
   flag_ira_share_spill_slots = saved_flag_ira_share_spill_slots;
diff -Naur gcc-5.5.0/gcc/loop-doloop.c gcc-5.5.0_good/gcc/loop-doloop.c
--- gcc-5.5.0/gcc/loop-doloop.c	2017-05-30 04:20:03.000000000 -0400
+++ gcc-5.5.0_good/gcc/loop-doloop.c	2024-05-05 02:02:35.498566651 -0400
@@ -449,7 +449,7 @@
     {
       fprintf (dump_file, "Doloop: Inserting doloop pattern (");
       if (desc->const_iter)
-	fprintf (dump_file, "%"PRId64, desc->niter);
+	fprintf (dump_file, "%" PRId64, desc->niter);
       else
 	fputs ("runtime", dump_file);
       fputs (" iterations).\n", dump_file);
diff -Naur gcc-5.5.0/gcc/loop-iv.c gcc-5.5.0_good/gcc/loop-iv.c
--- gcc-5.5.0/gcc/loop-iv.c	2015-01-20 03:29:09.000000000 -0500
+++ gcc-5.5.0_good/gcc/loop-iv.c	2024-05-05 02:03:14.621903882 -0400
@@ -2357,7 +2357,7 @@
   if (andmax)
     nmax = MIN (nmax, andmax);
   if (dump_file)
-    fprintf (dump_file, ";; Determined upper bound %"PRId64".\n",
+    fprintf (dump_file, ";; Determined upper bound %" PRId64 ".\n",
 	     nmax);
   return nmax;
 }
diff -Naur gcc-5.5.0/gcc/mcf.c gcc-5.5.0_good/gcc/mcf.c
--- gcc-5.5.0/gcc/mcf.c	2015-01-05 07:33:28.000000000 -0500
+++ gcc-5.5.0_good/gcc/mcf.c	2024-05-05 02:10:24.208613344 -0400
@@ -214,12 +214,12 @@
 
   if (fedge->type)
     {
-      fprintf (file, "flow/capacity=%"PRId64 "/",
+      fprintf (file, "flow/capacity=%" PRId64 "/",
 	       fedge->flow);
       if (fedge->max_capacity == CAP_INFINITY)
 	fputs ("+oo,", file);
       else
-	fprintf (file, "%"PRId64 ",", fedge->max_capacity);
+	fprintf (file, "%" PRId64 ",", fedge->max_capacity);
     }
 
   if (fedge->is_rflow_valid)
@@ -227,10 +227,10 @@
       if (fedge->rflow == CAP_INFINITY)
 	fputs (" rflow=+oo.", file);
       else
-	fprintf (file, " rflow=%"PRId64 ",", fedge->rflow);
+	fprintf (file, " rflow=%" PRId64 ",", fedge->rflow);
     }
 
-  fprintf (file, " cost=%"PRId64 ".", fedge->cost);
+  fprintf (file, " cost=%" PRId64 ".", fedge->cost);
 
   fprintf (file, "\t(%d->%d)", fedge->src, fedge->dest);
 
@@ -637,9 +637,9 @@
   if (dump_file)
     {
       fprintf (dump_file, "\nAdjust supply and demand:\n");
-      fprintf (dump_file, "supply_value=%"PRId64 "\n",
+      fprintf (dump_file, "supply_value=%" PRId64 "\n",
 	       supply_value);
-      fprintf (dump_file, "demand_value=%"PRId64 "\n",
+      fprintf (dump_file, "demand_value=%" PRId64 "\n",
 	       demand_value);
     }
 
@@ -909,10 +909,10 @@
     {
       fprintf (dump_file, "%d", cycle[k]);
       fprintf (dump_file,
-	       ": (%"PRId64 ", %"PRId64
+	       ": (%" PRId64 ", %" PRId64
 	       ")\n", sum_cost, cycle_flow);
       fprintf (dump_file,
-	       "Augment cycle with %"PRId64 "\n",
+	       "Augment cycle with %" PRId64 "\n",
 	       cycle_flow);
     }
 
@@ -1104,10 +1104,10 @@
 	      fprintf (dump_file, "<-");
 	    }
 	  fprintf (dump_file,
-		   "ENTRY  (path_capacity=%"PRId64 ")\n",
+		   "ENTRY  (path_capacity=%" PRId64 ")\n",
 		   increment);
 	  fprintf (dump_file,
-		   "Network flow is %"PRId64 ".\n",
+		   "Network flow is %" PRId64 ".\n",
 		   max_flow);
 	}
     }
@@ -1144,7 +1144,7 @@
       /* Fixup BB.  */
       if (dump_file)
         fprintf (dump_file,
-                 "BB%d: %"PRId64 "", bb->index, bb->count);
+                 "BB%d: %" PRId64 "", bb->index, bb->count);
 
       pfedge = find_fixup_edge (fixup_graph, i, i + 1);
       if (pfedge->flow)
@@ -1152,7 +1152,7 @@
           bb->count += pfedge->flow;
 	  if (dump_file)
 	    {
-	      fprintf (dump_file, " + %"PRId64 "(",
+	      fprintf (dump_file, " + %" PRId64 "(",
 	               pfedge->flow);
 	      print_edge (dump_file, fixup_graph, i, i + 1);
 	      fprintf (dump_file, ")");
@@ -1167,7 +1167,7 @@
           bb->count -= pfedge_n->flow;
 	  if (dump_file)
 	    {
-	      fprintf (dump_file, " - %"PRId64 "(",
+	      fprintf (dump_file, " - %" PRId64 "(",
 		       pfedge_n->flow);
 	      print_edge (dump_file, fixup_graph, i + 1,
 			  pfedge->norm_vertex_index);
@@ -1175,7 +1175,7 @@
 	    }
         }
       if (dump_file)
-        fprintf (dump_file, " = %"PRId64 "\n", bb->count);
+        fprintf (dump_file, " = %" PRId64 "\n", bb->count);
 
       /* Fixup edge.  */
       FOR_EACH_EDGE (e, ei, bb->succs)
@@ -1186,7 +1186,7 @@
 
           j = 2 * e->dest->index;
           if (dump_file)
-	    fprintf (dump_file, "%d->%d: %"PRId64 "",
+	    fprintf (dump_file, "%d->%d: %" PRId64 "",
 		     bb->index, e->dest->index, e->count);
 
           pfedge = find_fixup_edge (fixup_graph, i + 1, j);
@@ -1199,7 +1199,7 @@
 	          e->count += pfedge->flow;
 	          if (dump_file)
 		    {
-		      fprintf (dump_file, " + %"PRId64 "(",
+		      fprintf (dump_file, " + %" PRId64 "(",
 			       pfedge->flow);
 		      print_edge (dump_file, fixup_graph, i + 1, j);
 		      fprintf (dump_file, ")");
@@ -1214,7 +1214,7 @@
 	          e->count -= pfedge_n->flow;
 	          if (dump_file)
 		    {
-		      fprintf (dump_file, " - %"PRId64 "(",
+		      fprintf (dump_file, " - %" PRId64 "(",
 			       pfedge_n->flow);
 		      print_edge (dump_file, fixup_graph, j,
 			          pfedge->norm_vertex_index);
@@ -1234,7 +1234,7 @@
 	      if (dump_file)
 	        {
 	          fprintf (dump_file, "(self edge)");
-	          fprintf (dump_file, " + %"PRId64 "(",
+	          fprintf (dump_file, " + %" PRId64 "(",
 		           pfedge_n->flow);
 	          print_edge (dump_file, fixup_graph, i + 1,
 			      pfedge->norm_vertex_index);
@@ -1245,7 +1245,7 @@
           if (bb->count)
 	    e->probability = REG_BR_PROB_BASE * e->count / bb->count;
           if (dump_file)
-	    fprintf (dump_file, " = %"PRId64 "\t(%.1f%%)\n",
+	    fprintf (dump_file, " = %" PRId64 "\t(%.1f%%)\n",
 		     e->count, e->probability * 100.0 / REG_BR_PROB_BASE);
         }
     }
@@ -1298,14 +1298,14 @@
                || (bb->count != sum_edge_counts (bb->succs)))
             {
               fprintf (dump_file,
-                       "BB%d(%"PRId64 ")  **INVALID**: ",
+                       "BB%d(%" PRId64 ")  **INVALID**: ",
                        bb->index, bb->count);
               fprintf (stderr,
-                       "******** BB%d(%"PRId64
+                       "******** BB%d(%" PRId64
                        ")  **INVALID**: \n", bb->index, bb->count);
-              fprintf (dump_file, "in_edges=%"PRId64 " ",
+              fprintf (dump_file, "in_edges=%" PRId64 " ",
                        sum_edge_counts (bb->preds));
-              fprintf (dump_file, "out_edges=%"PRId64 "\n",
+              fprintf (dump_file, "out_edges=%" PRId64 "\n",
                        sum_edge_counts (bb->succs));
             }
          }
diff -Naur gcc-5.5.0/gcc/modulo-sched.c gcc-5.5.0_good/gcc/modulo-sched.c
--- gcc-5.5.0/gcc/modulo-sched.c	2016-05-23 06:41:35.000000000 -0400
+++ gcc-5.5.0_good/gcc/modulo-sched.c	2024-05-05 02:07:41.771930495 -0400
@@ -1487,15 +1487,15 @@
 	      if (profile_info && flag_branch_probabilities)
 	    	{
 	      	  fprintf (dump_file, "SMS loop-count ");
-	      	  fprintf (dump_file, "%"PRId64,
+	      	  fprintf (dump_file, "%" PRId64,
 	             	   (int64_t) bb->count);
 	      	  fprintf (dump_file, "\n");
                   fprintf (dump_file, "SMS trip-count ");
-                  fprintf (dump_file, "%"PRId64,
+                  fprintf (dump_file, "%" PRId64,
                            (int64_t) trip_count);
                   fprintf (dump_file, "\n");
 	      	  fprintf (dump_file, "SMS profile-sum-max ");
-	      	  fprintf (dump_file, "%"PRId64,
+	      	  fprintf (dump_file, "%" PRId64,
 	          	   (int64_t) profile_info->sum_max);
 	      	  fprintf (dump_file, "\n");
 	    	}
@@ -1609,11 +1609,11 @@
 	  if (profile_info && flag_branch_probabilities)
 	    {
 	      fprintf (dump_file, "SMS loop-count ");
-	      fprintf (dump_file, "%"PRId64,
+	      fprintf (dump_file, "%" PRId64,
 	               (int64_t) bb->count);
 	      fprintf (dump_file, "\n");
 	      fprintf (dump_file, "SMS profile-sum-max ");
-	      fprintf (dump_file, "%"PRId64,
+	      fprintf (dump_file, "%" PRId64,
 	               (int64_t) profile_info->sum_max);
 	      fprintf (dump_file, "\n");
 	    }
@@ -1640,7 +1640,7 @@
       if (dump_file && count_init)
         {
           fprintf (dump_file, "SMS const-doloop ");
-          fprintf (dump_file, "%"PRId64,
+          fprintf (dump_file, "%" PRId64,
 		     loop_count);
           fprintf (dump_file, "\n");
         }
@@ -1701,9 +1701,9 @@
 		  fprintf (dump_file, "SMS failed... \n");
 		  fprintf (dump_file, "SMS sched-failed (stage-count=%d,"
 			   " loop-count=", stage_count);
-		  fprintf (dump_file, "%"PRId64, loop_count);
+		  fprintf (dump_file, "%" PRId64, loop_count);
 		  fprintf (dump_file, ", trip-count=");
-		  fprintf (dump_file, "%"PRId64, trip_count);
+		  fprintf (dump_file, "%" PRId64, trip_count);
 		  fprintf (dump_file, ")\n");
 		}
 	      break;
diff -Naur gcc-5.5.0/gcc/predict.c gcc-5.5.0_good/gcc/predict.c
--- gcc-5.5.0/gcc/predict.c	2015-01-29 02:43:14.000000000 -0500
+++ gcc-5.5.0_good/gcc/predict.c	2024-05-05 02:11:14.498618354 -0400
@@ -714,10 +714,10 @@
 
   if (bb->count)
     {
-      fprintf (file, "  exec %"PRId64, bb->count);
+      fprintf (file, "  exec %" PRId64, bb->count);
       if (e)
 	{
-	  fprintf (file, " hit %"PRId64, e->count);
+	  fprintf (file, " hit %" PRId64, e->count);
 	  fprintf (file, " (%.1f%%)", e->count * 100.0 / bb->count);
 	}
     }
diff -Naur gcc-5.5.0/gcc/profile.c gcc-5.5.0_good/gcc/profile.c
--- gcc-5.5.0/gcc/profile.c	2015-01-15 08:28:42.000000000 -0500
+++ gcc-5.5.0_good/gcc/profile.c	2024-05-05 02:13:39.365299452 -0400
@@ -276,7 +276,7 @@
           ws_info = &gcov_working_sets[ws_ix];
           /* Print out the percentage using int arithmatic to avoid float.  */
           fprintf (dump_file, "\t\t%u.%02u%%: num counts=%u, min counter="
-                   "%"PRId64 "\n",
+                   "%" PRId64 "\n",
                    pct / 100, pct - (pct / 100 * 100),
                    ws_info->num_counters,
                    (int64_t)ws_info->min_counter);
@@ -357,7 +357,7 @@
 	      if (dump_file)
 		{
 		  fprintf (dump_file,
-		  	   "Edge %i->%i is inconsistent, count%"PRId64,
+		  	   "Edge %i->%i is inconsistent, count%" PRId64,
 			   e->src->index, e->dest->index, e->count);
 		  dump_bb (dump_file, e->src, 0, TDF_DETAILS);
 		  dump_bb (dump_file, e->dest, 0, TDF_DETAILS);
@@ -406,7 +406,7 @@
 	  if (dump_file)
 	    {
 	      fprintf (dump_file, "BB %i count is negative "
-		       "%"PRId64,
+		       "%" PRId64,
 		       bb->index,
 		       bb->count);
 	      dump_bb (dump_file, bb, 0, TDF_DETAILS);
@@ -418,7 +418,7 @@
 	  if (dump_file)
 	    {
 	      fprintf (dump_file, "BB %i count does not match sum of incoming edges "
-		       "%"PRId64" should be %"PRId64,
+		       "%" PRId64 " should be %" PRId64,
 		       bb->index,
 		       bb->count,
 		       sum_edge_counts (bb->preds));
@@ -433,7 +433,7 @@
 	  if (dump_file)
 	    {
 	      fprintf (dump_file, "BB %i count does not match sum of outgoing edges "
-		       "%"PRId64" should be %"PRId64,
+		       "%" PRId64 " should be %" PRId64,
 		       bb->index,
 		       bb->count,
 		       sum_edge_counts (bb->succs));
@@ -510,7 +510,7 @@
 	      {
 		fprintf (dump_file, "\nRead edge from %i to %i, count:",
 			 bb->index, e->dest->index);
-		fprintf (dump_file, "%"PRId64,
+		fprintf (dump_file, "%" PRId64,
 			 (int64_t) e->count);
 	      }
 	  }
diff -Naur gcc-5.5.0/gcc/stor-layout.c gcc-5.5.0_good/gcc/stor-layout.c
--- gcc-5.5.0/gcc/stor-layout.c	2015-08-17 11:44:35.000000000 -0400
+++ gcc-5.5.0_good/gcc/stor-layout.c	2024-05-05 02:18:02.881992370 -0400
@@ -262,7 +262,7 @@
   fntype = build_function_type (return_type, param_type_list);
 
   /* Build the function declaration.  */
-  sprintf (buf, "SZ"HOST_WIDE_INT_PRINT_UNSIGNED, fnno++);
+  sprintf (buf, "SZ" HOST_WIDE_INT_PRINT_UNSIGNED, fnno++);
   fnname = get_file_function_name (buf);
   fndecl = build_decl (input_location, FUNCTION_DECL, fnname, fntype);
   for (t = param_decl_list; t; t = DECL_CHAIN (t))
diff -Naur gcc-5.5.0/gcc/toplev.c gcc-5.5.0_good/gcc/toplev.c
--- gcc-5.5.0/gcc/toplev.c	2017-09-25 19:49:58.000000000 -0400
+++ gcc-5.5.0_good/gcc/toplev.c	2024-05-05 02:20:23.235339685 -0400
@@ -1120,7 +1120,7 @@
 	}
 
       fprintf (stack_usage_file,
-	       "%s:%d:%d:%s\t"HOST_WIDE_INT_PRINT_DEC"\t%s\n",
+	       "%s:%d:%d:%s\t" HOST_WIDE_INT_PRINT_DEC "\t%s\n",
 	       lbasename (loc.file),
 	       loc.line,
 	       loc.column,
